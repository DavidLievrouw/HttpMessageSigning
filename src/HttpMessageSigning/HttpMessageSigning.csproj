<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFrameworks>netstandard2.0;net472;netcoreapp2.1;netcoreapp3.1</TargetFrameworks>
        <AssemblyName>Dalion.HttpMessageSigning</AssemblyName>
        <RootNamespace>Dalion.HttpMessageSigning</RootNamespace>
        <DebugType>portable</DebugType>
        <DebugSymbols>true</DebugSymbols>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    </PropertyGroup>
    
    <PropertyGroup>
        <PackageId>Dalion.HttpMessageSigning</PackageId>
        <Company>Dalion</Company>
        <Description>Core library of the Dalion HttpMessageSigning C# implementation of the IETF Internet-Draft "Signing HTTP Messages".</Description>
        <Product>Dalion.HttpMessageSigning</Product>
        <Title>Dalion.HttpMessageSigning</Title>
        <Company>Dalion</Company>
        <Authors>David Lievrouw</Authors>
        <Owners>Dalion</Owners>
        <Copyright>Copyright (c) $([System.DateTime]::Now.ToString(yyyy)), David Lievrouw</Copyright>
        <PackageTags>signing http messages ietf cavage lievrouw dalion</PackageTags>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <PackageProjectUrl>https://github.com/DavidLievrouw/HttpMessageSigning</PackageProjectUrl>
        <RepositoryUrl>https://github.com/DavidLievrouw/HttpMessageSigning</RepositoryUrl>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <GenerateNuspecDependsOn>InitVersion</GenerateNuspecDependsOn>
    </PropertyGroup>
    
    <ItemGroup>
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
    </ItemGroup>

    <ItemGroup Condition="'$(TargetFramework)'=='netstandard2.0'">
        <PackageReference Include="Microsoft.Extensions.Primitives" Version="[3.1.2,)" />
    </ItemGroup>

    <ItemGroup Condition="'$(TargetFramework)'=='netcoreapp2.1'">
        <PackageReference Include="Microsoft.Extensions.Primitives" Version="[2.1.6,2.2.0)" />
    </ItemGroup>
    
    <ItemGroup Condition="'$(TargetFramework)'=='netcoreapp3.1'">
        <PackageReference Include="Microsoft.Extensions.Primitives" Version="[3.1.2,)" />
    </ItemGroup>
    
    <ItemGroup Condition="'$(TargetFramework)'=='net472'">
        <PackageReference Include="Microsoft.Extensions.Primitives" Version="[3.1.2,)" />
        <PackageReference Include="System.Net.Http" Version="[4.3.4,)" />
    </ItemGroup>
    
    <Target Name="InitVersion" BeforeTargets="BeforeBuild">
        <ReadLinesFromFile File="..\..\version.txt">
            <Output TaskParameter="Lines" PropertyName="PackageVersion" />
        </ReadLinesFromFile>
        <PropertyGroup>
            <BuildCounter Condition="'$(BuildCounter)'==''">0</BuildCounter>
            <ProductVersion Condition="'$(ProductVersion)'=='' And $(PackageVersion.IndexOf('-')) &gt; -1">$(PackageVersion.Substring(0, $(PackageVersion.IndexOf('-')))).$(BuildCounter)</ProductVersion>
            <ProductVersion Condition="'$(ProductVersion)'=='' And $(PackageVersion.IndexOf('-')) &lt; 0">$(PackageVersion).$(BuildCounter)</ProductVersion>
            <Version>$(PackageVersion)</Version>
            <AssemblyVersion>$(ProductVersion)</AssemblyVersion>
            <FileVersion>$(ProductVersion)</FileVersion>
            <InformationalVersion>$(ProductVersion)</InformationalVersion>
        </PropertyGroup>
        <Message Text="The $(Product) package version for $(TargetFramework) is '$(PackageVersion)'." Importance="High" />
        <Message Text="The $(Product) product version for $(TargetFramework) is '$(ProductVersion)'." Importance="High" />
    </Target>

</Project>
