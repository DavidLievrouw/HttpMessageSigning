<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net472</TargetFramework>
        <AssemblyName>Dalion.HttpMessageSigning.Verification.Owin</AssemblyName>
        <RootNamespace>Dalion.HttpMessageSigning.Verification.Owin</RootNamespace>
        <DebugType>portable</DebugType>
        <DebugSymbols>true</DebugSymbols>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    </PropertyGroup>
    
    <PropertyGroup>
        <PackageId>Dalion.HttpMessageSigning.Verification.Owin</PackageId>
        <PackageIconUrl>https://dalion.eu/dalion128.png</PackageIconUrl>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageIcon>dalion128.png</PackageIcon>
        <Company>Dalion</Company>
        <Description>Owin extensions for the Dalion HttpMessageSigning C# implementation of the IETF Internet-Draft "Signing HTTP Messages".</Description>
        <Product>Dalion.HttpMessageSigning.Verification.Owin</Product>
        <Title>Dalion.HttpMessageSigning.Verification.Owin</Title>
        <Company>Dalion</Company>
        <Authors>David Lievrouw</Authors>
        <Owners>Dalion</Owners>
        <Copyright>Copyright (c) $([System.DateTime]::Now.ToString(yyyy)), David Lievrouw</Copyright>
        <PackageTags>signing http messages ietf signatures lievrouw dalion owin</PackageTags>
        <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
        <PackageProjectUrl>https://github.com/DavidLievrouw/HttpMessageSigning</PackageProjectUrl>
        <RepositoryUrl>https://github.com/DavidLievrouw/HttpMessageSigning</RepositoryUrl>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <GenerateNuspecDependsOn>InitVersion</GenerateNuspecDependsOn>
    </PropertyGroup>

    <ItemGroup>
        <None Include="..\..\dalion128.png">
            <PackagePath>\</PackagePath>
            <Pack>true</Pack>
        </None>
    </ItemGroup>
    
    <ItemGroup>
        <ProjectReference Include="..\HttpMessageSigning.Verification\HttpMessageSigning.Verification.csproj" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
    </ItemGroup>
    
    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="[3.1.2,)" />
        <PackageReference Include="Microsoft.Owin" Version="[4.1.0,)" />
        <PackageReference Include="Microsoft.Owin.Security" Version="[4.1.0,)" />
        <PackageReference Include="Owin" Version="[1.0.0,)" />
    </ItemGroup>

    <ItemGroup>
        <Reference Include="System.Net.Http" />
    </ItemGroup>

    <Target Name="InitVersion" BeforeTargets="BeforeBuild">
        <ReadLinesFromFile File="..\..\version.txt">
            <Output TaskParameter="Lines" PropertyName="PackageVersion" />
        </ReadLinesFromFile>
        <PropertyGroup>
            <BuildCounter Condition="'$(BuildCounter)'==''">0</BuildCounter>
            <ProductVersion Condition="'$(ProductVersion)'=='' And $(PackageVersion.IndexOf('-')) &gt; -1">$(PackageVersion.Substring(0, $(PackageVersion.IndexOf('-')))).$(BuildCounter)</ProductVersion>
            <ProductVersion Condition="'$(ProductVersion)'=='' And $(PackageVersion.IndexOf('-')) &lt; 0">$(PackageVersion).$(BuildCounter)</ProductVersion>
            <Version>$(PackageVersion)</Version>
            <AssemblyVersion>$(ProductVersion)</AssemblyVersion>
            <FileVersion>$(ProductVersion)</FileVersion>
            <InformationalVersion>$(ProductVersion)</InformationalVersion>
        </PropertyGroup>
        <Message Text="The $(Product) package version for $(TargetFramework) is '$(PackageVersion)'." Importance="High" />
        <Message Text="The $(Product) product version for $(TargetFramework) is '$(ProductVersion)'." Importance="High" />
    </Target>

    <!-- Workaround for NuGet dependency version of a project reference -->
    <!-- https://github.com/NuGet/Home/issues/5556#issuecomment-585482714 -->
    <Target Name="_ExactProjectReferencesVersion" AfterTargets="_GetProjectReferenceVersions">
        <ItemGroup>
            <_ProjectReferencesWithExactVersions Include="@(_ProjectReferencesWithVersions)">
                <ProjectVersion>$(PackageVersion)</ProjectVersion>
            </_ProjectReferencesWithExactVersions>
        </ItemGroup>
        <ItemGroup>
            <_ProjectReferencesWithVersions Remove="@(_ProjectReferencesWithVersions)" />
            <_ProjectReferencesWithVersions Include="@(_ProjectReferencesWithExactVersions)" />
        </ItemGroup>
    </Target>

</Project>
